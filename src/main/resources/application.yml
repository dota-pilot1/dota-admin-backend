server:
  port: 8080
  ssl:
    enabled: ${SSL_ENABLED:false}
    key-store: ${SSL_KEY_STORE:}
    key-store-password: ${SSL_KEY_STORE_PASSWORD:}
    key-store-type: ${SSL_KEY_STORE_TYPE:PKCS12}

spring:
  application:
    name: dota-admin-backend
  mvc:
    view:
      prefix: /WEB-INF/views/
      suffix: .jsp
  # Datasource for local Postgres (matches docker.yml)
  datasource:
    url: jdbc:postgresql://localhost:5432/dota_admin
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  jpa:
    # 개발/문제 해결용: 매 기동시 스키마 재생성 (데이터 모두 삭제됨)
    hibernate:
      ddl-auto: create  # 확인 후 'update' 또는 'validate' 로 되돌리세요
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  open-in-view: false
  flyway:
    enabled: false  # 개발 단계: JPA ddl-auto(update) 사용 위해 비활성화
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${EMAIL_USERNAME:dotapilot1@gmail.com} # Gmail 주소
    password: ${EMAIL_PASSWORD:kicpvsrdpnrlpcrb} # Gmail 앱 비밀번호
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

# You can override these values per-profile, e.g. application-dev.yml or
# by setting SPRING_DATASOURCE_URL, SPRING_DATASOURCE_USERNAME, etc. in
# your environment or container.

app:
  jwt:
    secret: ${JWT_SECRET:mySecretKey123456789012345678901234567890123456789012345678901234567890}
    expiration: 300000 # ACCESS 토큰 만료 (5분, 테스트 목적)
    refresh-expiration: 1209600000 # REFRESH 토큰 만료 (14일)
  data:
    load-initial-users: false # 필수 계정만 생성, 추가 1000명 테스트 계정은 생성 안함
  roles:
    autocreate: true
  users:
    autocreate: true
    admin:
      username: ${APP_USERS_ADMIN_USERNAME:terecal}
      email: ${APP_USERS_ADMIN_EMAIL:terecal@daum.net}
      password: ${APP_USERS_ADMIN_PASSWORD:123456}
  registration:
    first-user-admin: true

notification:
  email:
    admin: ${ADMIN_EMAIL:dotapilot1@gmail.com} # 관리자 이메일
    enabled: true # 이메일 알림 활성화/비활성화

kakao:
  api:
    key: ${KAKAO_API_KEY:} # 카카오 REST API 키 (환경변수에서 설정)

logging:
  level:
    root: INFO
    com.company.dotaadminbackend: DEBUG # 애플리케이션 비즈니스 로그
  "org.springframework.security": INFO  # 필요한 경우 DEBUG (DEBUG 로 내리면 보안 관련 상세 로그)
  "org.hibernate.SQL": DEBUG            # 실행되는 SQL 확인
  "org.hibernate.type.descriptor.sql.BasicBinder": TRACE # 바인드 파라미터

---
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:postgresql://localhost:5432/dota_admin_dev
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: create # dev 프로필도 동일하게 강제 재생성 (필요 시 'update'로 되돌리세요)
  open-in-view: false
  flyway:
    enabled: false

server:
  port: 8081

app:
  jwt:
    secret: ${JWT_SECRET:myDevSecretKey}
    expiration: 300000 # ACCESS 토큰 만료 (5분, dev)
    refresh-expiration: 604800000 # REFRESH 토큰 만료 (7일, dev)
  data:
    load-initial-users: false # 필수 계정만 생성, 추가 1000명 테스트 계정은 생성 안함
  roles:
    autocreate: true
  users:
    autocreate: true
    admin:
      username: ${APP_USERS_ADMIN_USERNAME:devadmin}
      email: ${APP_USERS_ADMIN_EMAIL:devadmin@daum.net}
      password: ${APP_USERS_ADMIN_PASSWORD:devpassword}
  registration:
    first-user-admin: true

logging:
  level:
    root: DEBUG
  "com.company.dotaadminbackend": DEBUG
  "org.springframework.security": DEBUG
  "org.hibernate.SQL": DEBUG
  "org.hibernate.type.descriptor.sql.BasicBinder": TRACE

---
spring:
  config:
    activate:
      on-profile: production
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/dota_admin}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update # production에서는 update 사용
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  open-in-view: false
  flyway:
    enabled: false

server:
  port: 8080

app:
  jwt:
    secret: ${JWT_SECRET:change-this-in-production}
    expiration: 3600000 # ACCESS 토큰 만료 (1시간, production)
    refresh-expiration: 2592000000 # REFRESH 토큰 만료 (30일, production)
  data:
    load-initial-users: false
  roles:
    autocreate: true
  users:
    autocreate: true
    admin:
      username: ${APP_USERS_ADMIN_USERNAME:admin}
      email: ${APP_USERS_ADMIN_EMAIL:admin@example.com}
      password: ${APP_USERS_ADMIN_PASSWORD:changeme}
  registration:
    first-user-admin: true

logging:
  level:
    root: INFO
    com.company.dotaadminbackend: INFO
  "org.springframework.security": WARN
  "org.hibernate.SQL": WARN

